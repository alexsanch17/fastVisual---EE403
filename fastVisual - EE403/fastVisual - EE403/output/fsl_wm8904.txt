; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --library_type=standardlib -odebug\fsl_wm8904.o --asm_dir=.\output\ --list_dir=.\output\ --depend=debug\fsl_wm8904.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,66,1296,186 -I.\SRC\eGFX -I.\SRC\eGFX\Drivers -I.\SRC\eGFX\Fonts -I.\SRC\Board -I.\SRC\System\CMSIS\Include -I.\SRC\System\utilities -I.\SRC\Drivers -I.\SRC\System -I.\SRC\eGFX\Fonts\OCR_A_Extended__20px__Bold__SingleBitPerPixelGridFit_1BPP -I.\SRC\Audio -I.\SRC\eGFX\Sprites -I.\SRC\eGFX\Fonts\Consolas__26px__Regular__AntiAliasGridFit_1BPP -I.\SRC\eGFX\Fonts\Magneto__26px__Regular__AntiAliasGridFit_16BPP_565 -I.\RTE\_Lab6 -IC:\Keil_v5\ARM\PACK\Keil\LPC54000_DFP\2.2.0\LPCOpen\lpc5460x\chip_5460x\inc -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DCHIP_LPC5460X -DDEBUG -DCPU_LPC54608 -DCPU_LPC54608J512ET180=1 -DARM_MATH_CM4 -D__FPU_PRESENT -DCORE_M4 --omf_browse=debug\fsl_wm8904.crf SRC\Audio\fsl_wm8904.c]
                          THUMB

                          AREA ||i.WM8904_Deinit||, CODE, READONLY, ALIGN=1

                  WM8904_Deinit PROC
;;;316    
;;;317    status_t WM8904_Deinit(wm8904_handle_t *handle)
000000  b510              PUSH     {r4,lr}
;;;318    {
000002  4604              MOV      r4,r0
;;;319        /* reset */
;;;320        return WM8904_WriteRegister(handle, WM8904_RESET, 0x0000);
000004  2200              MOVS     r2,#0
000006  4611              MOV      r1,r2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       WM8904_WriteRegister
;;;321    }
00000e  bd10              POP      {r4,pc}
;;;322    
                          ENDP


                          AREA ||i.WM8904_GetDefaultConfig||, CODE, READONLY, ALIGN=1

                  WM8904_GetDefaultConfig PROC
;;;322    
;;;323    void WM8904_GetDefaultConfig(wm8904_config_t *config)
000000  2100              MOVS     r1,#0
;;;324    {
;;;325        memset(config, 0, sizeof(wm8904_config_t));
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;326    
;;;327        config->master = false;
000006  7001              STRB     r1,[r0,#0]
;;;328        config->protocol = kWM8904_ProtocolI2S;
000008  2102              MOVS     r1,#2
00000a  7041              STRB     r1,[r0,#1]
;;;329        config->format.fsRatio = kWM8904_FsRatio64X;
00000c  2100              MOVS     r1,#0
00000e  7081              STRB     r1,[r0,#2]
;;;330        config->format.sampleRate = kWM8904_SampleRate48kHz;
000010  2205              MOVS     r2,#5
000012  70c2              STRB     r2,[r0,#3]
;;;331        config->format.bitWidth = kWM8904_BitWidth16;
000014  2200              MOVS     r2,#0
000016  7102              STRB     r2,[r0,#4]
;;;332    }
000018  4770              BX       lr
;;;333    
                          ENDP


                          AREA ||i.WM8904_Init||, CODE, READONLY, ALIGN=1

                  WM8904_Init PROC
;;;95     
;;;96     status_t WM8904_Init(wm8904_handle_t *handle, wm8904_config_t *config)
000000  b570              PUSH     {r4-r6,lr}
;;;97     {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;98         status_t result;
;;;99     
;;;100        /* reset */
;;;101        result = WM8904_WriteRegister(handle, WM8904_RESET, 0x0000);
000006  2200              MOVS     r2,#0
000008  4611              MOV      r1,r2
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       WM8904_WriteRegister
000010  4604              MOV      r4,r0
;;;102        if (result != kStatus_WM8904_Success)
000012  b10c              CBZ      r4,|L3.24|
;;;103        {
;;;104            return result;
000014  4620              MOV      r0,r4
                  |L3.22|
;;;105        }
;;;106    
;;;107        /* MCLK_INV=0, SYSCLK_SRC=0, TOCLK_RATE=0, OPCLK_ENA=1,
;;;108         * CLK_SYS_ENA=1, CLK_DSP_ENA=1, TOCLK_ENA=1 */
;;;109        result = WM8904_WriteRegister(handle, WM8904_CLK_RATES_2, 0x000F);
;;;110        if (result != kStatus_WM8904_Success)
;;;111        {
;;;112            return result;
;;;113        }
;;;114    
;;;115        /* WSEQ_ENA=1, WSEQ_WRITE_INDEX=0_0000 */
;;;116        result = WM8904_WriteRegister(handle, WM8904_WRT_SEQUENCER_0, 0x0100);
;;;117        if (result != kStatus_WM8904_Success)
;;;118        {
;;;119            return result;
;;;120        }
;;;121    
;;;122        /* WSEQ_ABORT=0, WSEQ_START=1, WSEQ_START_INDEX=00_0000 */
;;;123        result = WM8904_WriteRegister(handle, WM8904_WRT_SEQUENCER_3, 0x0100);
;;;124        if (result != kStatus_WM8904_Success)
;;;125        {
;;;126            return result;
;;;127        }
;;;128    
;;;129        result = WM8904_WaitOnWriteSequencer(handle);
;;;130        if (result != kStatus_WM8904_Success)
;;;131        {
;;;132            return result;
;;;133        }
;;;134    
;;;135        /* TOCLK_RATE_DIV16=0, TOCLK_RATE_x4=1, SR_MODE=0, MCLK_DIV=1
;;;136         * (Required for MMCs: SGY, KRT see erratum CE000546) */
;;;137        result = WM8904_WriteRegister(handle, WM8904_CLK_RATES_0, 0xA45F);
;;;138        if (result != kStatus_WM8904_Success)
;;;139        {
;;;140            return result;
;;;141        }
;;;142    
;;;143        /* INL_ENA=1, INR ENA=1 */
;;;144        result = WM8904_WriteRegister(handle, WM8904_POWER_MGMT_0, 0x0003);
;;;145        if (result != kStatus_WM8904_Success)
;;;146        {
;;;147            return result;
;;;148        }
;;;149    
;;;150        /* HPL_PGA_ENA=1, HPR_PGA_ENA=1 */
;;;151        result = WM8904_WriteRegister(handle, WM8904_POWER_MGMT_2, 0x0003);
;;;152        if (result != kStatus_WM8904_Success)
;;;153        {
;;;154            return result;
;;;155        }
;;;156    
;;;157        /* DACL_ENA=1, DACR_ENA=1, ADCL_ENA=1, ADCR_ENA=1 */
;;;158        result = WM8904_WriteRegister(handle, WM8904_POWER_MGMT_6, 0x000F);
;;;159        if (result != kStatus_WM8904_Success)
;;;160        {
;;;161            return result;
;;;162        }
;;;163    
;;;164        /* ADC_OSR128=1 */
;;;165        result = WM8904_WriteRegister(handle, WM8904_ANALOG_ADC_0, 0x0001);
;;;166        if (result != kStatus_WM8904_Success)
;;;167        {
;;;168            return result;
;;;169        }
;;;170    
;;;171        /* CLK_SYS_RAT=0101 (512/fs) SAMPLE_RATE=101 (44.1kHz /48kHz) */
;;;172        result = WM8904_WriteRegister(handle, WM8904_CLK_RATES_1, 0x1405);
;;;173        if (result != kStatus_WM8904_Success)
;;;174        {
;;;175            return result;
;;;176        }
;;;177    
;;;178        /* DACL_DATINV=0, DACR_DATINV=0, DAC_BOOST=00, LOOPBACK=0, AIFADCL_SRC=0,
;;;179         * AIFADCR_SRC=1, AIFDACL_SRC=0, AIFDACR_SRC=1, ADC_COMP=0, ADC_COMPMODE=0,
;;;180         * DAC_COMP=0, DAC_COMPMODE=0 */
;;;181        result = WM8904_WriteRegister(handle, WM8904_AUDIO_IF_0, 0x0050);
;;;182        if (result != kStatus_WM8904_Success)
;;;183        {
;;;184            return result;
;;;185        }
;;;186    
;;;187        /* BCLK_DIR=0 (input), AIF_WL=00 (16-bits) */
;;;188        result = WM8904_WriteRegister(handle, WM8904_AUDIO_IF_1, 0x0002);
;;;189        if (result != kStatus_WM8904_Success)
;;;190        {
;;;191            return result;
;;;192        }
;;;193    
;;;194        /* OPCLK_DIV=0 (sysclk), BCLK_DIV=0c (sysclk/16) */
;;;195        result = WM8904_WriteRegister(handle, WM8904_AUDIO_IF_2, 0x000c);
;;;196        if (result != kStatus_WM8904_Success)
;;;197        {
;;;198            return result;
;;;199        }
;;;200    
;;;201        /* LRCLK_DIR=0 (input), LRCLK_RATE=0010_0000_0000 (BCLK / 32) */
;;;202        result = WM8904_WriteRegister(handle, WM8904_AUDIO_IF_3, 0x0020);
;;;203        if (result != kStatus_WM8904_Success)
;;;204        {
;;;205            return result;
;;;206        }
;;;207    
;;;208        /* DAC_MONO=0, DAC_SB_FILT-0, DAC_MUTERATE=0, DAC_UNMUTE RAMP=0,
;;;209         * DAC_OSR128=1, DAC_MUTE=0, DEEMPH=0 (none) */
;;;210        result = WM8904_WriteRegister(handle, WM8904_DAC_DIG_1, 0x0040);
;;;211        if (result != kStatus_WM8904_Success)
;;;212        {
;;;213            return result;
;;;214        }
;;;215    
;;;216        /* INL_CM_ENA=0, L_IP_SEL_N=10, L_IP_SEL_P=01, L_MODE=00 */
;;;217        result = WM8904_WriteRegister(handle, WM8904_ANALOG_LEFT_IN_1, 0x0014);
;;;218        if (result != kStatus_WM8904_Success)
;;;219        {
;;;220            return result;
;;;221        }
;;;222    
;;;223        /* INR CM_ENA=0, R_IP_SEL_N=10, R_IP_SEL_P=01, R_MODE=00 */
;;;224        result = WM8904_WriteRegister(handle, WM8904_ANALOG_RIGHT_IN_1, 0x0014);
;;;225        if (result != kStatus_WM8904_Success)
;;;226        {
;;;227            return result;
;;;228        }
;;;229    
;;;230        /* LINMUTE=0, LIN_VOL=0_0101 */
;;;231        result = WM8904_WriteRegister(handle, WM8904_ANALOG_LEFT_IN_0, 0x0005);
;;;232        if (result != kStatus_WM8904_Success)
;;;233        {
;;;234            return result;
;;;235        }
;;;236    
;;;237        /* RINMUTE=0, RIN VOL=0_0101 LINEOUTL RMV SHORT-1, LINEOUTL ENA_OUTP=1,
;;;238         * LINEOUTL_ENA_DLY=1, LINEOUTL_ENA=1, LINEOUTR_RMV_SHORT-1,
;;;239         * LINEOUTR_ENA_OUTP=1 */
;;;240        result = WM8904_WriteRegister(handle, WM8904_ANALOG_RIGHT_IN_0, 0x0005);
;;;241        if (result != kStatus_WM8904_Success)
;;;242        {
;;;243            return result;
;;;244        }
;;;245    
;;;246        /* HPL_BYP_ENA=0, HPR_BYP_ENA=0, LINEOUTL_BYP ENA=0, LINEOUTR_BYP ENA=0 */
;;;247        result = WM8904_WriteRegister(handle, WM8904_ANALOG_OUT12_ZC, 0x0000);
;;;248        if (result != kStatus_WM8904_Success)
;;;249        {
;;;250            return result;
;;;251        }
;;;252    
;;;253        /* HPOUTL_MUTE=0, HPOUT_VU=0, HPOUTLZC=0, HPOUTL_VOL=11_1001 */
;;;254        result = WM8904_WriteRegister(handle, WM8904_ANALOG_OUT1_LEFT, 0x0039);
;;;255        if (result != kStatus_WM8904_Success)
;;;256        {
;;;257            return result;
;;;258        }
;;;259    
;;;260        /* HPOUTR_MUTE=0, HPOUT_VU=0, HPOUTRZC=0, HPOUTR_VOL=11_1001 */
;;;261        result = WM8904_WriteRegister(handle, WM8904_ANALOG_OUT1_RIGHT, 0x0039);
;;;262        if (result != kStatus_WM8904_Success)
;;;263        {
;;;264            return result;
;;;265        }
;;;266    
;;;267        /* Enable DC servos for headphone out */
;;;268        result = WM8904_WriteRegister(handle, WM8904_DC_SERVO_0, 0x0003);
;;;269        if (result != kStatus_WM8904_Success)
;;;270        {
;;;271            return result;
;;;272        }
;;;273    
;;;274        /* HPL_RMV_SHORT=1, HPL_ENA_OUTP=1, HPL_ENA_DLY=1, HPL_ENA=1,
;;;275         * HPR_RMV_SHORT=1, HPR_ENA_OUTP=1, HPR_ENA_DLY=1, HPR_ENA=1 */
;;;276        result = WM8904_WriteRegister(handle, WM8904_ANALOG_HP_0, 0x00FF);
;;;277        if (result != kStatus_WM8904_Success)
;;;278        {
;;;279            return result;
;;;280        }
;;;281    
;;;282        /* CP_DYN_PWR=1 */
;;;283        result = WM8904_WriteRegister(handle, WM8904_CLS_W_0, 0x0001);
;;;284        if (result != kStatus_WM8904_Success)
;;;285        {
;;;286            return result;
;;;287        }
;;;288    
;;;289        /* CP_ENA=1 */
;;;290        result = WM8904_WriteRegister(handle, WM8904_CHRG_PUMP_0, 0x0001);
;;;291        if (result != kStatus_WM8904_Success)
;;;292        {
;;;293            return result;
;;;294        }
;;;295    
;;;296        result = WM8904_SetMasterSlave(handle, config->master);
;;;297        if (result != kStatus_WM8904_Success)
;;;298        {
;;;299            return result;
;;;300        }
;;;301    
;;;302        result = WM8904_SetProtocol(handle, config->protocol);
;;;303        if (result != kStatus_WM8904_Success)
;;;304        {
;;;305            return result;
;;;306        }
;;;307    
;;;308        result = WM8904_SetAudioFormat(handle, &(config->format));
;;;309        if (result != kStatus_WM8904_Success)
;;;310        {
;;;311            return result;
;;;312        }
;;;313    
;;;314        return kStatus_WM8904_Success;
;;;315    }
000016  bd70              POP      {r4-r6,pc}
                  |L3.24|
000018  220f              MOVS     r2,#0xf               ;109
00001a  2116              MOVS     r1,#0x16              ;109
00001c  4630              MOV      r0,r6                 ;109
00001e  f7fffffe          BL       WM8904_WriteRegister
000022  4604              MOV      r4,r0                 ;109
000024  b10c              CBZ      r4,|L3.42|
000026  4620              MOV      r0,r4                 ;112
000028  e7f5              B        |L3.22|
                  |L3.42|
00002a  f44f7280          MOV      r2,#0x100             ;116
00002e  216c              MOVS     r1,#0x6c              ;116
000030  4630              MOV      r0,r6                 ;116
000032  f7fffffe          BL       WM8904_WriteRegister
000036  4604              MOV      r4,r0                 ;116
000038  b10c              CBZ      r4,|L3.62|
00003a  4620              MOV      r0,r4                 ;119
00003c  e7eb              B        |L3.22|
                  |L3.62|
00003e  f44f7280          MOV      r2,#0x100             ;123
000042  216f              MOVS     r1,#0x6f              ;123
000044  4630              MOV      r0,r6                 ;123
000046  f7fffffe          BL       WM8904_WriteRegister
00004a  4604              MOV      r4,r0                 ;123
00004c  b10c              CBZ      r4,|L3.82|
00004e  4620              MOV      r0,r4                 ;126
000050  e7e1              B        |L3.22|
                  |L3.82|
000052  4630              MOV      r0,r6                 ;129
000054  f7fffffe          BL       WM8904_WaitOnWriteSequencer
000058  4604              MOV      r4,r0                 ;129
00005a  b10c              CBZ      r4,|L3.96|
00005c  4620              MOV      r0,r4                 ;132
00005e  e7da              B        |L3.22|
                  |L3.96|
000060  f24a425f          MOV      r2,#0xa45f            ;137
000064  2114              MOVS     r1,#0x14              ;137
000066  4630              MOV      r0,r6                 ;137
000068  f7fffffe          BL       WM8904_WriteRegister
00006c  4604              MOV      r4,r0                 ;137
00006e  b10c              CBZ      r4,|L3.116|
000070  4620              MOV      r0,r4                 ;140
000072  e7d0              B        |L3.22|
                  |L3.116|
000074  2203              MOVS     r2,#3                 ;144
000076  210c              MOVS     r1,#0xc               ;144
000078  4630              MOV      r0,r6                 ;144
00007a  f7fffffe          BL       WM8904_WriteRegister
00007e  4604              MOV      r4,r0                 ;144
000080  b10c              CBZ      r4,|L3.134|
000082  4620              MOV      r0,r4                 ;147
000084  e7c7              B        |L3.22|
                  |L3.134|
000086  2203              MOVS     r2,#3                 ;151
000088  210e              MOVS     r1,#0xe               ;151
00008a  4630              MOV      r0,r6                 ;151
00008c  f7fffffe          BL       WM8904_WriteRegister
000090  4604              MOV      r4,r0                 ;151
000092  b10c              CBZ      r4,|L3.152|
000094  4620              MOV      r0,r4                 ;154
000096  e7be              B        |L3.22|
                  |L3.152|
000098  220f              MOVS     r2,#0xf               ;158
00009a  2112              MOVS     r1,#0x12              ;158
00009c  4630              MOV      r0,r6                 ;158
00009e  f7fffffe          BL       WM8904_WriteRegister
0000a2  4604              MOV      r4,r0                 ;158
0000a4  b10c              CBZ      r4,|L3.170|
0000a6  4620              MOV      r0,r4                 ;161
0000a8  e7b5              B        |L3.22|
                  |L3.170|
0000aa  2201              MOVS     r2,#1                 ;165
0000ac  210a              MOVS     r1,#0xa               ;165
0000ae  4630              MOV      r0,r6                 ;165
0000b0  f7fffffe          BL       WM8904_WriteRegister
0000b4  4604              MOV      r4,r0                 ;165
0000b6  b10c              CBZ      r4,|L3.188|
0000b8  4620              MOV      r0,r4                 ;168
0000ba  e7ac              B        |L3.22|
                  |L3.188|
0000bc  f2414205          MOV      r2,#0x1405            ;172
0000c0  2115              MOVS     r1,#0x15              ;172
0000c2  4630              MOV      r0,r6                 ;172
0000c4  f7fffffe          BL       WM8904_WriteRegister
0000c8  4604              MOV      r4,r0                 ;172
0000ca  b10c              CBZ      r4,|L3.208|
0000cc  4620              MOV      r0,r4                 ;175
0000ce  e7a2              B        |L3.22|
                  |L3.208|
0000d0  2250              MOVS     r2,#0x50              ;181
0000d2  2118              MOVS     r1,#0x18              ;181
0000d4  4630              MOV      r0,r6                 ;181
0000d6  f7fffffe          BL       WM8904_WriteRegister
0000da  4604              MOV      r4,r0                 ;181
0000dc  b10c              CBZ      r4,|L3.226|
0000de  4620              MOV      r0,r4                 ;184
0000e0  e799              B        |L3.22|
                  |L3.226|
0000e2  2202              MOVS     r2,#2                 ;188
0000e4  2119              MOVS     r1,#0x19              ;188
0000e6  4630              MOV      r0,r6                 ;188
0000e8  f7fffffe          BL       WM8904_WriteRegister
0000ec  4604              MOV      r4,r0                 ;188
0000ee  b10c              CBZ      r4,|L3.244|
0000f0  4620              MOV      r0,r4                 ;191
0000f2  e790              B        |L3.22|
                  |L3.244|
0000f4  220c              MOVS     r2,#0xc               ;195
0000f6  211a              MOVS     r1,#0x1a              ;195
0000f8  4630              MOV      r0,r6                 ;195
0000fa  f7fffffe          BL       WM8904_WriteRegister
0000fe  4604              MOV      r4,r0                 ;195
000100  b10c              CBZ      r4,|L3.262|
000102  4620              MOV      r0,r4                 ;198
000104  e787              B        |L3.22|
                  |L3.262|
000106  2220              MOVS     r2,#0x20              ;202
000108  211b              MOVS     r1,#0x1b              ;202
00010a  4630              MOV      r0,r6                 ;202
00010c  f7fffffe          BL       WM8904_WriteRegister
000110  4604              MOV      r4,r0                 ;202
000112  b10c              CBZ      r4,|L3.280|
000114  4620              MOV      r0,r4                 ;205
000116  e77e              B        |L3.22|
                  |L3.280|
000118  2240              MOVS     r2,#0x40              ;210
00011a  2121              MOVS     r1,#0x21              ;210
00011c  4630              MOV      r0,r6                 ;210
00011e  f7fffffe          BL       WM8904_WriteRegister
000122  4604              MOV      r4,r0                 ;210
000124  b10c              CBZ      r4,|L3.298|
000126  4620              MOV      r0,r4                 ;213
000128  e775              B        |L3.22|
                  |L3.298|
00012a  2214              MOVS     r2,#0x14              ;217
00012c  212e              MOVS     r1,#0x2e              ;217
00012e  4630              MOV      r0,r6                 ;217
000130  f7fffffe          BL       WM8904_WriteRegister
000134  4604              MOV      r4,r0                 ;217
000136  b10c              CBZ      r4,|L3.316|
000138  4620              MOV      r0,r4                 ;220
00013a  e76c              B        |L3.22|
                  |L3.316|
00013c  2214              MOVS     r2,#0x14              ;224
00013e  212f              MOVS     r1,#0x2f              ;224
000140  4630              MOV      r0,r6                 ;224
000142  f7fffffe          BL       WM8904_WriteRegister
000146  4604              MOV      r4,r0                 ;224
000148  b10c              CBZ      r4,|L3.334|
00014a  4620              MOV      r0,r4                 ;227
00014c  e763              B        |L3.22|
                  |L3.334|
00014e  2205              MOVS     r2,#5                 ;231
000150  212c              MOVS     r1,#0x2c              ;231
000152  4630              MOV      r0,r6                 ;231
000154  f7fffffe          BL       WM8904_WriteRegister
000158  4604              MOV      r4,r0                 ;231
00015a  b10c              CBZ      r4,|L3.352|
00015c  4620              MOV      r0,r4                 ;234
00015e  e75a              B        |L3.22|
                  |L3.352|
000160  2205              MOVS     r2,#5                 ;240
000162  212d              MOVS     r1,#0x2d              ;240
000164  4630              MOV      r0,r6                 ;240
000166  f7fffffe          BL       WM8904_WriteRegister
00016a  4604              MOV      r4,r0                 ;240
00016c  b10c              CBZ      r4,|L3.370|
00016e  4620              MOV      r0,r4                 ;243
000170  e751              B        |L3.22|
                  |L3.370|
000172  2200              MOVS     r2,#0                 ;247
000174  213d              MOVS     r1,#0x3d              ;247
000176  4630              MOV      r0,r6                 ;247
000178  f7fffffe          BL       WM8904_WriteRegister
00017c  4604              MOV      r4,r0                 ;247
00017e  b10c              CBZ      r4,|L3.388|
000180  4620              MOV      r0,r4                 ;250
000182  e748              B        |L3.22|
                  |L3.388|
000184  2239              MOVS     r2,#0x39              ;254
000186  4611              MOV      r1,r2                 ;254
000188  4630              MOV      r0,r6                 ;254
00018a  f7fffffe          BL       WM8904_WriteRegister
00018e  4604              MOV      r4,r0                 ;254
000190  b10c              CBZ      r4,|L3.406|
000192  4620              MOV      r0,r4                 ;257
000194  e73f              B        |L3.22|
                  |L3.406|
000196  2239              MOVS     r2,#0x39              ;261
000198  213a              MOVS     r1,#0x3a              ;261
00019a  4630              MOV      r0,r6                 ;261
00019c  f7fffffe          BL       WM8904_WriteRegister
0001a0  4604              MOV      r4,r0                 ;261
0001a2  b10c              CBZ      r4,|L3.424|
0001a4  4620              MOV      r0,r4                 ;264
0001a6  e736              B        |L3.22|
                  |L3.424|
0001a8  2203              MOVS     r2,#3                 ;268
0001aa  2143              MOVS     r1,#0x43              ;268
0001ac  4630              MOV      r0,r6                 ;268
0001ae  f7fffffe          BL       WM8904_WriteRegister
0001b2  4604              MOV      r4,r0                 ;268
0001b4  b10c              CBZ      r4,|L3.442|
0001b6  4620              MOV      r0,r4                 ;271
0001b8  e72d              B        |L3.22|
                  |L3.442|
0001ba  22ff              MOVS     r2,#0xff              ;276
0001bc  215a              MOVS     r1,#0x5a              ;276
0001be  4630              MOV      r0,r6                 ;276
0001c0  f7fffffe          BL       WM8904_WriteRegister
0001c4  4604              MOV      r4,r0                 ;276
0001c6  b10c              CBZ      r4,|L3.460|
0001c8  4620              MOV      r0,r4                 ;279
0001ca  e724              B        |L3.22|
                  |L3.460|
0001cc  2201              MOVS     r2,#1                 ;283
0001ce  2168              MOVS     r1,#0x68              ;283
0001d0  4630              MOV      r0,r6                 ;283
0001d2  f7fffffe          BL       WM8904_WriteRegister
0001d6  4604              MOV      r4,r0                 ;283
0001d8  b10c              CBZ      r4,|L3.478|
0001da  4620              MOV      r0,r4                 ;286
0001dc  e71b              B        |L3.22|
                  |L3.478|
0001de  2201              MOVS     r2,#1                 ;290
0001e0  2162              MOVS     r1,#0x62              ;290
0001e2  4630              MOV      r0,r6                 ;290
0001e4  f7fffffe          BL       WM8904_WriteRegister
0001e8  4604              MOV      r4,r0                 ;290
0001ea  b10c              CBZ      r4,|L3.496|
0001ec  4620              MOV      r0,r4                 ;293
0001ee  e712              B        |L3.22|
                  |L3.496|
0001f0  7829              LDRB     r1,[r5,#0]            ;296
0001f2  4630              MOV      r0,r6                 ;296
0001f4  f7fffffe          BL       WM8904_SetMasterSlave
0001f8  4604              MOV      r4,r0                 ;296
0001fa  b10c              CBZ      r4,|L3.512|
0001fc  4620              MOV      r0,r4                 ;299
0001fe  e70a              B        |L3.22|
                  |L3.512|
000200  7869              LDRB     r1,[r5,#1]            ;302
000202  4630              MOV      r0,r6                 ;302
000204  f7fffffe          BL       WM8904_SetProtocol
000208  4604              MOV      r4,r0                 ;302
00020a  b10c              CBZ      r4,|L3.528|
00020c  4620              MOV      r0,r4                 ;305
00020e  e702              B        |L3.22|
                  |L3.528|
000210  1ca9              ADDS     r1,r5,#2              ;308
000212  4630              MOV      r0,r6                 ;308
000214  f7fffffe          BL       WM8904_SetAudioFormat
000218  4604              MOV      r4,r0                 ;308
00021a  b10c              CBZ      r4,|L3.544|
00021c  4620              MOV      r0,r4                 ;311
00021e  e6fa              B        |L3.22|
                  |L3.544|
000220  2000              MOVS     r0,#0                 ;314
000222  e6f8              B        |L3.22|
;;;316    
                          ENDP


                          AREA ||i.WM8904_ModifyRegister||, CODE, READONLY, ALIGN=1

                  WM8904_ModifyRegister PROC
;;;515    
;;;516    static status_t WM8904_ModifyRegister(wm8904_handle_t *handle, uint8_t reg, uint16_t mask, uint16_t value)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;517    {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
;;;518        status_t result;
;;;519        uint16_t regValue;
;;;520    
;;;521        result = WM8904_ReadRegister(handle, reg, &regValue);
00000c  466a              MOV      r2,sp
00000e  4641              MOV      r1,r8
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       WM8904_ReadRegister
000016  4606              MOV      r6,r0
;;;522        if (result != kStatus_WM8904_Success)
000018  b116              CBZ      r6,|L4.32|
;;;523        {
;;;524            return result;
00001a  4630              MOV      r0,r6
                  |L4.28|
;;;525        }
;;;526    
;;;527        regValue &= (uint16_t)~mask;
;;;528        regValue |= value;
;;;529    
;;;530        return WM8904_WriteRegister(handle, reg, regValue);
;;;531    }
00001c  e8bd83f8          POP      {r3-r9,pc}
                  |L4.32|
000020  f8bd0000          LDRH     r0,[sp,#0]            ;527
000024  43a0              BICS     r0,r0,r4              ;527
000026  9000              STR      r0,[sp,#0]            ;527
000028  f8bd0000          LDRH     r0,[sp,#0]            ;528
00002c  4328              ORRS     r0,r0,r5              ;528
00002e  9000              STR      r0,[sp,#0]            ;528
000030  f8bd2000          LDRH     r2,[sp,#0]            ;530
000034  4641              MOV      r1,r8                 ;530
000036  4638              MOV      r0,r7                 ;530
000038  f7fffffe          BL       WM8904_WriteRegister
00003c  e7ee              B        |L4.28|
                          ENDP


                          AREA ||i.WM8904_PrintRegisters||, CODE, READONLY, ALIGN=2

                  WM8904_PrintRegisters PROC
;;;424    
;;;425    status_t WM8904_PrintRegisters(wm8904_handle_t *handle)
000000  b5f8              PUSH     {r3-r7,lr}
;;;426    {
000002  4606              MOV      r6,r0
;;;427        status_t result;
;;;428        uint16_t value;
;;;429        uint32_t i;
;;;430    
;;;431        for (i = 0; i < sizeof(allRegisters); i++)
000004  2400              MOVS     r4,#0
000006  e01e              B        |L5.70|
                  |L5.8|
;;;432        {
;;;433            result = WM8904_ReadRegister(handle, allRegisters[i], &value);
000008  4812              LDR      r0,|L5.84|
00000a  5d01              LDRB     r1,[r0,r4]
00000c  466a              MOV      r2,sp
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       WM8904_ReadRegister
000014  4605              MOV      r5,r0
;;;434            if (result != kStatus_WM8904_Success)
000016  b125              CBZ      r5,|L5.34|
;;;435            {
;;;436                PRINTF("\r\n");
000018  a00f              ADR      r0,|L5.88|
00001a  f7fffffe          BL       DbgConsole_Printf
;;;437                return result;
00001e  4628              MOV      r0,r5
                  |L5.32|
;;;438            }
;;;439            PRINTF("%s", ((i % 8) == 0) ? "\r\n" : "\t");
;;;440            PRINTF("%02X:%04X", allRegisters[i], value);
;;;441        }
;;;442    
;;;443        PRINTF("\r\n");
;;;444        return result;
;;;445    }
000020  bdf8              POP      {r3-r7,pc}
                  |L5.34|
000022  f0040007          AND      r0,r4,#7              ;439
000026  b908              CBNZ     r0,|L5.44|
000028  a00b              ADR      r0,|L5.88|
00002a  e000              B        |L5.46|
                  |L5.44|
00002c  a00b              ADR      r0,|L5.92|
                  |L5.46|
00002e  4601              MOV      r1,r0                 ;439
000030  a00b              ADR      r0,|L5.96|
000032  f7fffffe          BL       DbgConsole_Printf
000036  4807              LDR      r0,|L5.84|
000038  5d01              LDRB     r1,[r0,r4]            ;440
00003a  f8bd2000          LDRH     r2,[sp,#0]            ;440
00003e  a009              ADR      r0,|L5.100|
000040  f7fffffe          BL       DbgConsole_Printf
000044  1c64              ADDS     r4,r4,#1              ;431
                  |L5.70|
000046  2c62              CMP      r4,#0x62              ;431
000048  d3de              BCC      |L5.8|
00004a  a003              ADR      r0,|L5.88|
00004c  f7fffffe          BL       DbgConsole_Printf
000050  4628              MOV      r0,r5                 ;444
000052  e7e5              B        |L5.32|
;;;446    
                          ENDP

                  |L5.84|
                          DCD      allRegisters
                  |L5.88|
000058  0d0a00            DCB      "\r\n",0
00005b  00                DCB      0
                  |L5.92|
00005c  0900              DCB      "\t",0
00005e  00                DCB      0
00005f  00                DCB      0
                  |L5.96|
000060  257300            DCB      "%s",0
000063  00                DCB      0
                  |L5.100|
000064  25303258          DCB      "%02X:%04X",0
000068  3a253034
00006c  5800    
00006e  00                DCB      0
00006f  00                DCB      0

                          AREA ||i.WM8904_ReadRegister||, CODE, READONLY, ALIGN=1

                  WM8904_ReadRegister PROC
;;;488    
;;;489    static status_t WM8904_ReadRegister(wm8904_handle_t *handle, uint8_t reg, uint16_t *value)
000000  b5f0              PUSH     {r4-r7,lr}
;;;490    {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;491        status_t result;
;;;492        i2c_master_transfer_t transfer;
;;;493        uint8_t buffer[2];
;;;494    
;;;495        *value = 0x0000U;
00000a  2000              MOVS     r0,#0
00000c  8020              STRH     r0,[r4,#0]
;;;496    
;;;497        transfer.flags = kI2C_TransferDefaultFlag;
00000e  9001              STR      r0,[sp,#4]
;;;498        transfer.slaveAddress = WM8904_I2C_ADDRESS;
000010  201a              MOVS     r0,#0x1a
000012  f8ad0008          STRH     r0,[sp,#8]
;;;499        transfer.direction = kI2C_Read;
000016  2001              MOVS     r0,#1
000018  f88d000a          STRB     r0,[sp,#0xa]
;;;500        transfer.subaddress = (uint32_t)reg;
00001c  9603              STR      r6,[sp,#0xc]
;;;501        transfer.subaddressSize = 1U;
00001e  9004              STR      r0,[sp,#0x10]
;;;502        transfer.data = buffer;
000020  f8cdd014          STR      sp,[sp,#0x14]
;;;503        transfer.dataSize = sizeof(buffer);
000024  2002              MOVS     r0,#2
000026  9006              STR      r0,[sp,#0x18]
;;;504    
;;;505        result = I2C_MasterTransferBlocking(handle->i2c, &transfer);
000028  a901              ADD      r1,sp,#4
00002a  6828              LDR      r0,[r5,#0]
00002c  f7fffffe          BL       I2C_MasterTransferBlocking
000030  4607              MOV      r7,r0
;;;506        if (result != kStatus_Success)
000032  b117              CBZ      r7,|L6.58|
;;;507        {
;;;508            return kStatus_WM8904_Fail;
000034  2001              MOVS     r0,#1
                  |L6.54|
;;;509        }
;;;510    
;;;511        *value = (uint16_t)((((uint32_t)buffer[0]) << 8U) | ((uint32_t)buffer[1]));
;;;512    
;;;513        return kStatus_WM8904_Success;
;;;514    }
000036  b007              ADD      sp,sp,#0x1c
000038  bdf0              POP      {r4-r7,pc}
                  |L6.58|
00003a  f89d0001          LDRB     r0,[sp,#1]            ;511
00003e  f89d1000          LDRB     r1,[sp,#0]            ;511
000042  ea402001          ORR      r0,r0,r1,LSL #8       ;511
000046  8020              STRH     r0,[r4,#0]            ;511
000048  2000              MOVS     r0,#0                 ;513
00004a  e7f4              B        |L6.54|
;;;515    
                          ENDP


                          AREA ||i.WM8904_SetAudioFormat||, CODE, READONLY, ALIGN=1

                  WM8904_SetAudioFormat PROC
;;;349    
;;;350    status_t WM8904_SetAudioFormat(wm8904_handle_t *handle, wm8904_audio_format_t *format)
000000  b570              PUSH     {r4-r6,lr}
;;;351    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;352        status_t result;
;;;353    
;;;354        /* Disable SYSCLK */
;;;355        result = WM8904_WriteRegister(handle, WM8904_CLK_RATES_2, 0x00);
000006  2200              MOVS     r2,#0
000008  2116              MOVS     r1,#0x16
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       WM8904_WriteRegister
000010  4604              MOV      r4,r0
;;;356        if (result != kStatus_WM8904_Success)
000012  b10c              CBZ      r4,|L7.24|
;;;357        {
;;;358            return result;
000014  4620              MOV      r0,r4
                  |L7.22|
;;;359        }
;;;360    
;;;361        /* Set Clock ratio and sample rate */
;;;362        result = WM8904_WriteRegister(handle, WM8904_CLK_RATES_1, ((uint32_t)format->fsRatio << 10) | format->sampleRate);
;;;363        if (result != kStatus_WM8904_Success)
;;;364        {
;;;365            return result;
;;;366        }
;;;367    
;;;368        /* Set bit resolution */
;;;369        result = WM8904_ModifyRegister(handle, WM8904_AUDIO_IF_1, 0x000C, (uint16_t)format->bitWidth);
;;;370        if (result != kStatus_WM8904_Success)
;;;371        {
;;;372            return result;
;;;373        }
;;;374    
;;;375        /* Enable SYSCLK */
;;;376        result = WM8904_WriteRegister(handle, WM8904_CLK_RATES_2, 0x1007);
;;;377        if (result != kStatus_WM8904_Success)
;;;378        {
;;;379            return result;
;;;380        }
;;;381    
;;;382        return kStatus_WM8904_Success;
;;;383    }
000016  bd70              POP      {r4-r6,pc}
                  |L7.24|
000018  7868              LDRB     r0,[r5,#1]            ;362
00001a  7829              LDRB     r1,[r5,#0]            ;362
00001c  ea402081          ORR      r0,r0,r1,LSL #10      ;362
000020  b282              UXTH     r2,r0                 ;362
000022  2115              MOVS     r1,#0x15              ;362
000024  4630              MOV      r0,r6                 ;362
000026  f7fffffe          BL       WM8904_WriteRegister
00002a  4604              MOV      r4,r0                 ;362
00002c  b10c              CBZ      r4,|L7.50|
00002e  4620              MOV      r0,r4                 ;365
000030  e7f1              B        |L7.22|
                  |L7.50|
000032  78ab              LDRB     r3,[r5,#2]            ;369
000034  220c              MOVS     r2,#0xc               ;369
000036  2119              MOVS     r1,#0x19              ;369
000038  4630              MOV      r0,r6                 ;369
00003a  f7fffffe          BL       WM8904_ModifyRegister
00003e  4604              MOV      r4,r0                 ;369
000040  b10c              CBZ      r4,|L7.70|
000042  4620              MOV      r0,r4                 ;372
000044  e7e7              B        |L7.22|
                  |L7.70|
000046  f2410207          MOV      r2,#0x1007            ;376
00004a  2116              MOVS     r1,#0x16              ;376
00004c  4630              MOV      r0,r6                 ;376
00004e  f7fffffe          BL       WM8904_WriteRegister
000052  4604              MOV      r4,r0                 ;376
000054  b10c              CBZ      r4,|L7.90|
000056  4620              MOV      r0,r4                 ;379
000058  e7dd              B        |L7.22|
                  |L7.90|
00005a  2000              MOVS     r0,#0                 ;382
00005c  e7db              B        |L7.22|
;;;384    
                          ENDP


                          AREA ||i.WM8904_SetMasterSlave||, CODE, READONLY, ALIGN=1

                  WM8904_SetMasterSlave PROC
;;;333    
;;;334    status_t WM8904_SetMasterSlave(wm8904_handle_t *handle, bool master)
000000  4602              MOV      r2,r0
;;;335    {
;;;336        if (master)
000002  b109              CBZ      r1,|L8.8|
;;;337        {
;;;338            /* only slave currently supported */
;;;339            return kStatus_WM8904_Fail;
000004  2001              MOVS     r0,#1
                  |L8.6|
;;;340        }
;;;341    
;;;342        return kStatus_WM8904_Success;
;;;343    }
000006  4770              BX       lr
                  |L8.8|
000008  2000              MOVS     r0,#0                 ;342
00000a  e7fc              B        |L8.6|
;;;344    
                          ENDP


                          AREA ||i.WM8904_SetMute||, CODE, READONLY, ALIGN=1

                  WM8904_SetMute PROC
;;;403    
;;;404    status_t WM8904_SetMute(wm8904_handle_t *handle, bool muteLeft, bool muteRight)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;405    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;406        status_t result;
;;;407        uint16_t left = muteLeft ? 0x0100 : 0x0000;
00000a  b115              CBZ      r5,|L9.18|
00000c  f44f7080          MOV      r0,#0x100
000010  e000              B        |L9.20|
                  |L9.18|
000012  2000              MOVS     r0,#0
                  |L9.20|
000014  4680              MOV      r8,r0
;;;408        uint16_t right = muteRight ? 0x0100 : 0x0000;
000016  b116              CBZ      r6,|L9.30|
000018  f44f7080          MOV      r0,#0x100
00001c  e000              B        |L9.32|
                  |L9.30|
00001e  2000              MOVS     r0,#0
                  |L9.32|
000020  4681              MOV      r9,r0
;;;409    
;;;410        result = WM8904_ModifyRegister(handle, WM8904_ANALOG_OUT1_LEFT, 0x0100, left);
000022  4643              MOV      r3,r8
000024  f44f7280          MOV      r2,#0x100
000028  2139              MOVS     r1,#0x39
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       WM8904_ModifyRegister
000030  4604              MOV      r4,r0
;;;411        if (result != kStatus_WM8904_Success)
000032  b114              CBZ      r4,|L9.58|
;;;412        {
;;;413            return result;
000034  4620              MOV      r0,r4
                  |L9.54|
;;;414        }
;;;415    
;;;416        result = WM8904_ModifyRegister(handle, WM8904_ANALOG_OUT1_RIGHT, 0x0180, right | 0x0080);
;;;417        if (result != kStatus_WM8904_Success)
;;;418        {
;;;419            return result;
;;;420        }
;;;421    
;;;422        return kStatus_WM8904_Success;
;;;423    }
000036  e8bd87f0          POP      {r4-r10,pc}
                  |L9.58|
00003a  f0490380          ORR      r3,r9,#0x80           ;416
00003e  f44f72c0          MOV      r2,#0x180             ;416
000042  213a              MOVS     r1,#0x3a              ;416
000044  4638              MOV      r0,r7                 ;416
000046  f7fffffe          BL       WM8904_ModifyRegister
00004a  4604              MOV      r4,r0                 ;416
00004c  b10c              CBZ      r4,|L9.82|
00004e  4620              MOV      r0,r4                 ;419
000050  e7f1              B        |L9.54|
                  |L9.82|
000052  2000              MOVS     r0,#0                 ;422
000054  e7ef              B        |L9.54|
;;;424    
                          ENDP


                          AREA ||i.WM8904_SetProtocol||, CODE, READONLY, ALIGN=1

                  WM8904_SetProtocol PROC
;;;344    
;;;345    status_t WM8904_SetProtocol(wm8904_handle_t *handle, wm8904_protocol_t protocol)
000000  b570              PUSH     {r4-r6,lr}
;;;346    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;347        return WM8904_ModifyRegister(handle, WM8904_AUDIO_IF_1, 0x0003, (uint16_t)protocol);
000006  4623              MOV      r3,r4
000008  2203              MOVS     r2,#3
00000a  2119              MOVS     r1,#0x19
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       WM8904_ModifyRegister
;;;348    }
000012  bd70              POP      {r4-r6,pc}
;;;349    
                          ENDP


                          AREA ||i.WM8904_SetVolume||, CODE, READONLY, ALIGN=1

                  WM8904_SetVolume PROC
;;;384    
;;;385    status_t WM8904_SetVolume(wm8904_handle_t *handle, uint16_t volumeLeft, uint16_t volumeRight)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;386    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;387        status_t result;
;;;388    
;;;389        result = WM8904_ModifyRegister(handle, WM8904_ANALOG_OUT1_LEFT, 0x3F, volumeLeft);
00000a  462b              MOV      r3,r5
00000c  223f              MOVS     r2,#0x3f
00000e  2139              MOVS     r1,#0x39
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       WM8904_ModifyRegister
000016  4604              MOV      r4,r0
;;;390        if (result != kStatus_WM8904_Success)
000018  b114              CBZ      r4,|L11.32|
;;;391        {
;;;392            return result;
00001a  4620              MOV      r0,r4
                  |L11.28|
;;;393        }
;;;394    
;;;395        result = WM8904_ModifyRegister(handle, WM8904_ANALOG_OUT1_RIGHT, 0xBF, volumeRight | 0x0080);
;;;396        if (result != kStatus_WM8904_Success)
;;;397        {
;;;398            return result;
;;;399        }
;;;400    
;;;401        return kStatus_WM8904_Success;
;;;402    }
00001c  e8bd81f0          POP      {r4-r8,pc}
                  |L11.32|
000020  f0460380          ORR      r3,r6,#0x80           ;395
000024  22bf              MOVS     r2,#0xbf              ;395
000026  213a              MOVS     r1,#0x3a              ;395
000028  4638              MOV      r0,r7                 ;395
00002a  f7fffffe          BL       WM8904_ModifyRegister
00002e  4604              MOV      r4,r0                 ;395
000030  b10c              CBZ      r4,|L11.54|
000032  4620              MOV      r0,r4                 ;398
000034  e7f2              B        |L11.28|
                  |L11.54|
000036  2000              MOVS     r0,#0                 ;401
000038  e7f0              B        |L11.28|
;;;403    
                          ENDP


                          AREA ||i.WM8904_WaitOnWriteSequencer||, CODE, READONLY, ALIGN=1

                  WM8904_WaitOnWriteSequencer PROC
;;;446    
;;;447    static status_t WM8904_WaitOnWriteSequencer(wm8904_handle_t *handle)
000000  b538              PUSH     {r3-r5,lr}
;;;448    {
000002  4605              MOV      r5,r0
;;;449        status_t result;
;;;450        uint16_t value;
;;;451    
;;;452        do
000004  bf00              NOP      
                  |L12.6|
;;;453        {
;;;454            result = WM8904_ReadRegister(handle, WM8904_WRT_SEQUENCER_4, &value);
000006  466a              MOV      r2,sp
000008  2170              MOVS     r1,#0x70
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       WM8904_ReadRegister
000010  4604              MOV      r4,r0
;;;455        } while ((result == kStatus_WM8904_Success) && (value & 1));
000012  b92c              CBNZ     r4,|L12.32|
000014  f8bd0000          LDRH     r0,[sp,#0]
000018  f0000001          AND      r0,r0,#1
00001c  2800              CMP      r0,#0
00001e  d1f2              BNE      |L12.6|
                  |L12.32|
;;;456    
;;;457        return result;
000020  4620              MOV      r0,r4
;;;458    }
000022  bd38              POP      {r3-r5,pc}
;;;459    
                          ENDP


                          AREA ||i.WM8904_WriteRegister||, CODE, READONLY, ALIGN=1

                  WM8904_WriteRegister PROC
;;;459    
;;;460    static status_t WM8904_WriteRegister(wm8904_handle_t *handle, uint8_t reg, uint16_t value)
000000  b5f0              PUSH     {r4-r7,lr}
;;;461    {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;462        status_t result;
;;;463        i2c_master_transfer_t transfer;
;;;464        uint8_t buffer[3];
;;;465    
;;;466        buffer[0] = reg;
00000a  f88d6000          STRB     r6,[sp,#0]
;;;467        buffer[1] = (value >> 8U) & 0xFFU;
00000e  0a20              LSRS     r0,r4,#8
000010  f88d0001          STRB     r0,[sp,#1]
;;;468        buffer[2] = value & 0xFFU;
000014  b2e0              UXTB     r0,r4
000016  f88d0002          STRB     r0,[sp,#2]
;;;469    
;;;470        transfer.flags = kI2C_TransferDefaultFlag;
00001a  2000              MOVS     r0,#0
00001c  9001              STR      r0,[sp,#4]
;;;471        transfer.slaveAddress = WM8904_I2C_ADDRESS;
00001e  201a              MOVS     r0,#0x1a
000020  f8ad0008          STRH     r0,[sp,#8]
;;;472        transfer.direction = kI2C_Write;
000024  2000              MOVS     r0,#0
000026  f88d000a          STRB     r0,[sp,#0xa]
;;;473        transfer.subaddress = 0U;
00002a  9003              STR      r0,[sp,#0xc]
;;;474        transfer.subaddressSize = 0U;
00002c  9004              STR      r0,[sp,#0x10]
;;;475        transfer.data = buffer;
00002e  f8cdd014          STR      sp,[sp,#0x14]
;;;476        transfer.dataSize = sizeof(buffer);
000032  2003              MOVS     r0,#3
000034  9006              STR      r0,[sp,#0x18]
;;;477    
;;;478        result = I2C_MasterTransferBlocking(handle->i2c, &transfer);
000036  a901              ADD      r1,sp,#4
000038  6828              LDR      r0,[r5,#0]
00003a  f7fffffe          BL       I2C_MasterTransferBlocking
00003e  4607              MOV      r7,r0
;;;479        if (result == kStatus_Success)
000040  b917              CBNZ     r7,|L13.72|
;;;480        {
;;;481            return kStatus_WM8904_Success;
000042  2000              MOVS     r0,#0
                  |L13.68|
;;;482        }
;;;483        else
;;;484        {
;;;485            return kStatus_WM8904_Fail;
;;;486        }
;;;487    }
000044  b007              ADD      sp,sp,#0x1c
000046  bdf0              POP      {r4-r7,pc}
                  |L13.72|
000048  2001              MOVS     r0,#1                 ;485
00004a  e7fb              B        |L13.68|
;;;488    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  allRegisters
000000  00040506          DCB      0x00,0x04,0x05,0x06
000004  070a0c0e          DCB      0x07,0x0a,0x0c,0x0e
000008  0f121415          DCB      0x0f,0x12,0x14,0x15
00000c  1618191a          DCB      0x16,0x18,0x19,0x1a
000010  1b1e1f20          DCB      0x1b,0x1e,0x1f,0x20
000014  21242526          DCB      0x21,0x24,0x25,0x26
000018  2728292a          DCB      0x27,0x28,0x29,0x2a
00001c  2b2c2d2e          DCB      0x2b,0x2c,0x2d,0x2e
000020  2f393a3b          DCB      0x2f,0x39,0x3a,0x3b
000024  3c3d4344          DCB      0x3c,0x3d,0x43,0x44
000028  45474849          DCB      0x45,0x47,0x48,0x49
00002c  4a4b4c4d          DCB      0x4a,0x4b,0x4c,0x4d
000030  5a5e6268          DCB      0x5a,0x5e,0x62,0x68
000034  6c6d6e6f          DCB      0x6c,0x6d,0x6e,0x6f
000038  70747576          DCB      0x70,0x74,0x75,0x76
00003c  7778797a          DCB      0x77,0x78,0x79,0x7a
000040  7b7c7e7f          DCB      0x7b,0x7c,0x7e,0x7f
000044  80818286          DCB      0x80,0x81,0x82,0x86
000048  8788898a          DCB      0x87,0x88,0x89,0x8a
00004c  8b8c8d8e          DCB      0x8b,0x8c,0x8d,0x8e
000050  8f909192          DCB      0x8f,0x90,0x91,0x92
000054  93949596          DCB      0x93,0x94,0x95,0x96
000058  9798999a          DCB      0x97,0x98,0x99,0x9a
00005c  9b9c9dc6          DCB      0x9b,0x9c,0x9d,0xc6
000060  f7f8              DCB      0xf7,0xf8

;*** Start embedded assembler ***

#line 1 "SRC\\Audio\\fsl_wm8904.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_wm8904_c_94e4f362____REV16|
#line 388 ".\\SRC\\System\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___12_fsl_wm8904_c_94e4f362____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_wm8904_c_94e4f362____REVSH|
#line 402
|__asm___12_fsl_wm8904_c_94e4f362____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_fsl_wm8904_c_94e4f362____RRX|
#line 587
|__asm___12_fsl_wm8904_c_94e4f362____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
