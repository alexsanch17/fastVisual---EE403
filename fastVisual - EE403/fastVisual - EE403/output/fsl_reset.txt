; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --library_type=standardlib -odebug\fsl_reset.o --asm_dir=.\output\ --list_dir=.\output\ --depend=debug\fsl_reset.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,66,1296,186 -I.\SRC\eGFX -I.\SRC\eGFX\Drivers -I.\SRC\eGFX\Fonts -I.\SRC\Board -I.\SRC\System\CMSIS\Include -I.\SRC\System\utilities -I.\SRC\Drivers -I.\SRC\System -I.\SRC\eGFX\Fonts\OCR_A_Extended__20px__Bold__SingleBitPerPixelGridFit_1BPP -I.\SRC\Audio -I.\SRC\eGFX\Sprites -I.\SRC\eGFX\Fonts\Consolas__26px__Regular__AntiAliasGridFit_1BPP -I.\SRC\eGFX\Fonts\Magneto__26px__Regular__AntiAliasGridFit_16BPP_565 -I.\SRC\eGFX\Fonts\Arial__23px__Regular__SystemDefault_1BPP -I.\RTE\_Lab6 -IC:\Keil_v5\ARM\PACK\Keil\LPC54000_DFP\2.2.0\LPCOpen\lpc5460x\chip_5460x\inc -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=523 -DCHIP_LPC5460X -DDEBUG -DCPU_LPC54608 -DCPU_LPC54608J512ET180=1 -DARM_MATH_CM4 -D__FPU_PRESENT -DCORE_M4 --omf_browse=debug\fsl_reset.crf SRC\Drivers\fsl_reset.c]
                          THUMB

                          AREA ||i.RESET_ClearPeripheralReset||, CODE, READONLY, ALIGN=2

                  RESET_ClearPeripheralReset PROC
;;;85     
;;;86     void RESET_ClearPeripheralReset(reset_ip_name_t peripheral)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;87     {
000004  4605              MOV      r5,r0
;;;88         const uint32_t regIndex = ((uint32_t)peripheral & 0xFFFF0000u) >> 16;
000006  0c2e              LSRS     r6,r5,#16
;;;89         const uint32_t bitPos = ((uint32_t)peripheral & 0x0000FFFFu);
000008  b2af              UXTH     r7,r5
;;;90         const uint32_t bitMask = 1u << bitPos;
00000a  2001              MOVS     r0,#1
00000c  fa00f407          LSL      r4,r0,r7
;;;91     
;;;92         assert(bitPos < 32u);
000010  2f20              CMP      r7,#0x20
000012  d200              BCS      |L1.22|
000014  e004              B        |L1.32|
                  |L1.22|
000016  225c              MOVS     r2,#0x5c
000018  a10d              ADR      r1,|L1.80|
00001a  a013              ADR      r0,|L1.104|
00001c  f7fffffe          BL       __aeabi_assert
                  |L1.32|
;;;93     
;;;94         /* ASYNC_SYSCON registers have offset 1024 */
;;;95         if (regIndex >= SYSCON_PRESETCTRL_COUNT)
000020  2e03              CMP      r6,#3
000022  d308              BCC      |L1.54|
;;;96         {
;;;97             /* reset register is in ASYNC_SYSCON */
;;;98     
;;;99             /* clear bit */
;;;100            ASYNC_SYSCON->ASYNCPRESETCTRLCLR = bitMask;
000024  4814              LDR      r0,|L1.120|
000026  6084              STR      r4,[r0,#8]
;;;101            /* wait until it reads 0b0 */
;;;102            while (bitMask == (ASYNC_SYSCON->ASYNCPRESETCTRL & bitMask))
000028  bf00              NOP      
                  |L1.42|
00002a  4813              LDR      r0,|L1.120|
00002c  6800              LDR      r0,[r0,#0]
00002e  4020              ANDS     r0,r0,r4
000030  42a0              CMP      r0,r4
000032  d0fa              BEQ      |L1.42|
000034  e00a              B        |L1.76|
                  |L1.54|
;;;103            {
;;;104            }
;;;105        }
;;;106        else
;;;107        {
;;;108            /* reset register is in SYSCON */
;;;109    
;;;110            /* clear bit */
;;;111            SYSCON->PRESETCTRLCLR[regIndex] = bitMask;
000036  4811              LDR      r0,|L1.124|
000038  f8404026          STR      r4,[r0,r6,LSL #2]
;;;112            /* wait until it reads 0b0 */
;;;113            while (bitMask == (SYSCON->PRESETCTRL[regIndex] & bitMask))
00003c  bf00              NOP      
                  |L1.62|
00003e  480f              LDR      r0,|L1.124|
000040  3840              SUBS     r0,r0,#0x40
000042  f8500026          LDR      r0,[r0,r6,LSL #2]
000046  4020              ANDS     r0,r0,r4
000048  42a0              CMP      r0,r4
00004a  d0f8              BEQ      |L1.62|
                  |L1.76|
;;;114            {
;;;115            }
;;;116        }
;;;117    }
00004c  e8bd81f0          POP      {r4-r8,pc}
;;;118    
                          ENDP

                  |L1.80|
000050  5352435c          DCB      "SRC\\Drivers\\fsl_reset.c",0
000054  44726976
000058  6572735c
00005c  66736c5f
000060  72657365
000064  742e6300
                  |L1.104|
000068  62697450          DCB      "bitPos < 32u",0
00006c  6f73203c
000070  20333275
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L1.120|
                          DCD      0x40040000
                  |L1.124|
                          DCD      0x40000140

                          AREA ||i.RESET_PeripheralReset||, CODE, READONLY, ALIGN=1

                  RESET_PeripheralReset PROC
;;;118    
;;;119    void RESET_PeripheralReset(reset_ip_name_t peripheral)
000000  b510              PUSH     {r4,lr}
;;;120    {
000002  4604              MOV      r4,r0
;;;121        RESET_SetPeripheralReset(peripheral);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       RESET_SetPeripheralReset
;;;122        RESET_ClearPeripheralReset(peripheral);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       RESET_ClearPeripheralReset
;;;123    }
000010  bd10              POP      {r4,pc}
;;;124    
                          ENDP


                          AREA ||i.RESET_SetPeripheralReset||, CODE, READONLY, ALIGN=2

                  RESET_SetPeripheralReset PROC
;;;52     
;;;53     void RESET_SetPeripheralReset(reset_ip_name_t peripheral)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;54     {
000004  4605              MOV      r5,r0
;;;55         const uint32_t regIndex = ((uint32_t)peripheral & 0xFFFF0000u) >> 16;
000006  0c2e              LSRS     r6,r5,#16
;;;56         const uint32_t bitPos = ((uint32_t)peripheral & 0x0000FFFFu);
000008  b2af              UXTH     r7,r5
;;;57         const uint32_t bitMask = 1u << bitPos;
00000a  2001              MOVS     r0,#1
00000c  fa00f407          LSL      r4,r0,r7
;;;58     
;;;59         assert(bitPos < 32u);
000010  2f20              CMP      r7,#0x20
000012  d200              BCS      |L3.22|
000014  e004              B        |L3.32|
                  |L3.22|
000016  223b              MOVS     r2,#0x3b
000018  a10d              ADR      r1,|L3.80|
00001a  a013              ADR      r0,|L3.104|
00001c  f7fffffe          BL       __aeabi_assert
                  |L3.32|
;;;60     
;;;61         /* ASYNC_SYSCON registers have offset 1024 */
;;;62         if (regIndex >= SYSCON_PRESETCTRL_COUNT)
000020  2e03              CMP      r6,#3
000022  d308              BCC      |L3.54|
;;;63         {
;;;64             /* reset register is in ASYNC_SYSCON */
;;;65     
;;;66             /* set bit */
;;;67             ASYNC_SYSCON->ASYNCPRESETCTRLSET = bitMask;
000024  4814              LDR      r0,|L3.120|
000026  6044              STR      r4,[r0,#4]
;;;68             /* wait until it reads 0b1 */
;;;69             while (0u == (ASYNC_SYSCON->ASYNCPRESETCTRL & bitMask))
000028  bf00              NOP      
                  |L3.42|
00002a  4813              LDR      r0,|L3.120|
00002c  6800              LDR      r0,[r0,#0]
00002e  4020              ANDS     r0,r0,r4
000030  2800              CMP      r0,#0
000032  d0fa              BEQ      |L3.42|
000034  e00a              B        |L3.76|
                  |L3.54|
;;;70             {
;;;71             }
;;;72         }
;;;73         else
;;;74         {
;;;75             /* reset register is in SYSCON */
;;;76     
;;;77             /* set bit */
;;;78             SYSCON->PRESETCTRLSET[regIndex] = bitMask;
000036  4811              LDR      r0,|L3.124|
000038  f8404026          STR      r4,[r0,r6,LSL #2]
;;;79             /* wait until it reads 0b1 */
;;;80             while (0u == (SYSCON->PRESETCTRL[regIndex] & bitMask))
00003c  bf00              NOP      
                  |L3.62|
00003e  480f              LDR      r0,|L3.124|
000040  3820              SUBS     r0,r0,#0x20
000042  f8500026          LDR      r0,[r0,r6,LSL #2]
000046  4020              ANDS     r0,r0,r4
000048  2800              CMP      r0,#0
00004a  d0f8              BEQ      |L3.62|
                  |L3.76|
;;;81             {
;;;82             }
;;;83         }
;;;84     }
00004c  e8bd81f0          POP      {r4-r8,pc}
;;;85     
                          ENDP

                  |L3.80|
000050  5352435c          DCB      "SRC\\Drivers\\fsl_reset.c",0
000054  44726976
000058  6572735c
00005c  66736c5f
000060  72657365
000064  742e6300
                  |L3.104|
000068  62697450          DCB      "bitPos < 32u",0
00006c  6f73203c
000070  20333275
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L3.120|
                          DCD      0x40040000
                  |L3.124|
                          DCD      0x40000120

;*** Start embedded assembler ***

#line 1 "SRC\\Drivers\\fsl_reset.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_reset_c_c2b7fa37____REV16|
#line 388 ".\\SRC\\System\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_fsl_reset_c_c2b7fa37____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_reset_c_c2b7fa37____REVSH|
#line 402
|__asm___11_fsl_reset_c_c2b7fa37____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_fsl_reset_c_c2b7fa37____RRX|
#line 587
|__asm___11_fsl_reset_c_c2b7fa37____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
